<script>
  const modal = document.querySelector("#add-user-modal");
const form = document.querySelector("#add-user-form");
// success toast
const successToast = Toastify({
  text: "User was added successfully! Reloading the list...",
  duration: 1000,
});
function closeModal() {
  modal.style.display = "none";
}
function openModal() {
  modal.style.display = "block";
}
// form submit 
form.onsubmit = async function (event) {
  event.preventDefault();
  const errorPlaceholders = document.querySelectorAll("p.error");
  for (let i = 0; i < errorPlaceholders.length; i++) {
    errorPlaceholders[i].style.display = "none";
  }
  const inputErrors = document.querySelectorAll("input.error");
  if (inputErrors.length > 0) {
    for (let j = 0; j < inputErrors.length; j++) {
      inputErrors[j].classList.remove("error");
    }
  }


  // prepare the form data
  const formData = new FormData();
   formData.append('form',form);
  // send the request to server
  let response = await fetch('/users', {
    method: "POST",
    body: formData
  });


  // get response
  let result =  await response.json();
  // handle error and response
  if (result.errors) {
    // errors
    Object.keys(result.errors).forEach((fieldName) => {
      // add error class to all inputs
      form[fieldName].classList.add("error");
      // set all error placeholders (p tag) textContent
      const errorPlaceholder = document.querySelector(`.${fieldName}-error`);
      errorPlaceholder.textContent = result.errors[fieldName].msg;
      // make all placeholders visible
      errorPlaceholder.style.display = "block";
    });
  } else {
    // success
    successToast.showToast();
    closeModal();
    document.querySelector("p.error").style.display = "none";
    // reload the page after 1 second
    setTimeout(() => {
      location.reload();
    }, 1000);
  }
};
</script>